
version: '2'

networks:
  caldera:

services:
  b9-cli-2:
    container_name: b9-cli-2
    tty: true
    stdin_open: true
    image: b9-cli-2
    environment:
      - CORE_PEER_ID=b9-cli-2
      - CORE_PEER_ADDRESS=artist-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-florence:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic-network-kafka_caldera
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
      - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_TLS_CERT_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/artifacts/crypto-config/peerOrganizations/artist-org/users/Admin@artist-org/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    volumes:
      - /var/run/:/host/var/run/
      - ./artifacts/crypto-config:/etc/hyperledger/fabric/artifacts/crypto-config
      - ./api/chaincode/src:/opt/gopath/src
    # command: /bin/bash
    depends_on:
      - orderer0
      - artist-peer-florence
    networks:
      - caldera


  zookeeper0:
    container_name: zookeeper0
    extends:
      file: ./artifacts/kafka.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=1
      # list of severs that make the zookeeper ensemble
    networks:
      - caldera
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888


  zookeeper1:
    container_name: zookeeper1
    extends:
      file: ./artifacts/kafka.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=2
    networks:
      - caldera
    ports:
      - 12181:2181
      - 12888:2888
      - 13888:3888

  zookeeper2:
    container_name: zookeeper2
    extends:
      file: ./artifacts/kafka.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=3
    networks:
      - caldera
    ports:
      - 22181:2181
      - 22888:2888
      - 23888:3888


  zookeeper3:
    container_name: zookeeper3
    extends:
      file: ./artifacts/kafka.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=4
    networks:
      - caldera
    ports:
      - 32181:2181
      - 32888:2888
      - 33888:3888


  zookeeper4:
    container_name: zookeeper4
    extends:
      file: ./artifacts/kafka.yaml
      service: zookeeper
    environment:
      - ZOO_MY_ID=5
    networks:
      - caldera
    ports:
      - 42181:2181
      - 42888:2888
      - 43888:3888

  # building out our kafka services
  kafka0:
    container_name: kafka0
    extends:
      file: ./artifacts/kafka.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=0
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
    ports:
      - 9092:9092
      - 9093:9093
    networks:
      - caldera

  kafka1:
    container_name: kafka1
    extends:
      file: ./artifacts/kafka.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
    ports:
      - 10092:9092
      - 10093:9093
    networks:
      - caldera

  kafka2:
    container_name: kafka2
    extends:
      file: ./artifacts/kafka.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=2
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
    ports:
      - 11092:9092
      - 11093:9093
    networks:
      - caldera


  kafka3:
    container_name: kafka3
    extends:
      file: ./artifacts/kafka.yaml
      service: kafka
    environment:
      - KAFKA_BROKER_ID=3
    depends_on:
      - zookeeper0
      - zookeeper1
      - zookeeper2
      - zookeeper3
      - zookeeper4
    ports:
      - 12092:9092
      - 12093:9093

  # orderer node configurations

  orderer0:
    container_name: orderer0
    extends:
      file: ./artifacts/orderer.yaml
      service: orderer
    depends_on:
      - kafka0
      - kafka1
      - kafka2
      - kafka3
    networks:
      - caldera
    ports:
      - 7050:7050
    volumes:
      - ./artifacts/channel-artifacts/genesis.block:/var/hyperledger/orderer/genesis.block
      - ./artifacts/crypto-config/ordererOrganizations/orderer-org/orderers/orderer0.orderer-org/msp:/var/hyperledger/orderer/msp
    command: orderer


  # Certificate authority containers
  artist-ca:
    container_name: artist-ca
    # extends from the configuration from ca-base.yaml
    extends:
      file: ./artifacts/ca-base.yaml
      service: ca-base
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_SERVER_CA_NAME=artist-ca
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/artist-org/ca/root:/etc/hyperledger/fabric-ca-server-config
    # expose ports <host:container>
    ports:
      - "7054:7054"
    networks:
      - caldera

  broker-ca:
    container_name: broker-ca
    extends:
      file: ./artifacts/ca-base.yaml
      service: ca-base
    environment:
      - FABRIC_CA_SERVER_CA_NAME=broker-ca
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/broker-org/ca/root:/etc/hyperledger/fabric-ca-server-config
    image: hyperledger/fabric-ca:x86_64-1.1.0
    ports:
      - "8054:7054"
    networks:
      - caldera

  # peer container configuration
  artist-peer-florence:
    container_name: artist-peer-florence
    extends:
      file: ./artifacts/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=artist-peer-florence
      - CORE_PEER_ADDRESS=artist-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-florence:7051
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
      - CORE_PEER_GOSSIP_BOOTSTRAP=artist-peer-florence:7051
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/msp:/etc/hyperledger/fabric/msp
    ports:
      - 7051:7051
      - 7053:7053
    networks:
      - caldera

  artist-peer-paris:
    container_name: artist-peer-paris
    extends:
      file: ./artifacts/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=artist-peer-paris
      - CORE_PEER_ADDRESS=artist-peer-paris:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-paris:7051
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
      - CORE_PEER_GOSSIP_BOOTSTRAP=artist-peer-paris:7051
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/artist-org/peers/artist-peer-paris.artist-org/msp:/etc/hyperledger/fabric/msp
    networks:
      - caldera

  broker-peer-florence:
    container_name: broker-peer-florence
    extends:
      file: ./artifacts/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=broker-peer-florence
      - CORE_PEER_ADDRESS=broker-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=broker-peer-florence:7051
      - CORE_PEER_LOCALMSPID=BrokerOrgMSP
      - CORE_PEER_GOSSIP_BOOTSTRAP=broker-peer-florence:7051
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/broker-org/peers/broker-peer-florence.broker-org/msp:/etc/hyperledger/fabric/msp
    networks:
      - caldera

  broker-peer-paris:
    container_name: broker-peer-paris
    extends:
      file: ./artifacts/peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=broker-peer-paris
      - CORE_PEER_ADDRESS=broker-peer-paris:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=broker-peer-paris:7051
      - CORE_PEER_LOCALMSPID=BrokerOrgMSP
      - CORE_PEER_GOSSIP_BOOTSTRAP=broker-peer-paris:7051
    volumes:
      - ./artifacts/crypto-config/peerOrganizations/broker-org/peers/broker-peer-paris.broker-org/msp:/etc/hyperledger/fabric/msp
    ports:
      - 10051:7051
      - 10053:7053
    networks:
      - caldera

  api:
    container_name: api
    image: b9-api
    environment:
      - PORT=3000
      - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
      - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:x86_64-1.1.0
    ports:
      - 3000:3000
    volumes:
      - /var/run/:/host/var/run/
    depends_on:
      - orderer0
      - artist-peer-paris
      - artist-peer-florence
      - broker-peer-paris
      - broker-peer-florence
    networks:
      - caldera
