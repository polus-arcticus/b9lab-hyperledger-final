# a fabric network can be spun up using docker compose
# fabrics modular services are split into containers defined as a list of services
# a network is also created for the services to share a network
version: '2'

networks:
  caldera:

services:
  # a cli service
  # comes pre injected with artist-org credentials to operate the network
  # container name
  b9cli:
    container_name: b9cli
    tty: true
    stdin_open: true
    # image used, check docker images to see
    image: b9cli
    environment:
      # env variables such as network enpoints and paths to crypto
      - CORE_PEER_ID=b9cli
      - CORE_PEER_ADDRESS=artist-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-florence:7051
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic-network_caldera
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_LOGGING_LEVEL=DEBUG
      # artist org credential preload
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/peers/peerOrganizations/artist-org/peers/artist-peer-florence.artist-org/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/peers/peerOrganizations/artist-org/users/Admin@artist-org/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    # folders to add from local machine on spin up
    volumes:
      - /var/run/:/host/var/run/
      - ./containers/api/chaincode/src:/opt/gopath/src
    command: /bin/bash
    # some containers are dependant on others
    depends_on:
      - orderer0
      - artist-peer-florence
    # attach to a network
    networks:
      - caldera

  orderer0:
    container_name: orderer0
    image: b9orderer
    environment:
    - ORDERER_GENERAL_LOGLEVEL=debug
    - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    - ORDERER_GENERAL_GENESISMETHOD=file
    # path to genesis block
    - ORDERER_GENERAL_GENESISFILE=/orderer/crypto/genesis.block
    - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
    - ORDERER_GENERAL_LOCALMSPDIR=/orderer/crypto/msp
    # tls
    - ORDERER_GENERAL_TLS_ENABLED=true
    - ORDERER_GENERAL_TLS_PRIVATEKEY=/orderer/crypto/tls/server.key
    - ORDERER_GENERAL_TLS_CERTIFICATE=/orderer/crypto/tls/server.crt
    - ORDERER_GENERAL_TLS_ROOTCAS=[/orderer/crypto/tls/ca.crt]
    working_dir: /orderer
    command: orderer
    # inner outer port mapping
    ports:
      - 7050:7050
    networks:
      - caldera

  # Certificate authority containers
  artist-ca:
    container_name: artist-ca
    # extends from the configuration from ca-base.yaml
    extends:
      file: ./ca-base.yaml
      service: ca-base
    image: artist-ca
    # expose ports <host:container>
    ports:
      - 7054:7054
    networks:
      - caldera

  broker-ca:
    container_name: broker-ca
    extends:
      file: ./ca-base.yaml
      service: ca-base
    image: broker-ca
    ports:
      - 8054:7054
    networks:
      - caldera

  # peer container configuration
  artist-peer-florence:
    container_name: artist-peer-florence
    extends:
      file: ./peer-base.yaml
      service: peer-base
    image: artist-peer-florence
    environment:
      - CORE_PEER_ID=artist-peer-florence
      - CORE_PEER_ADDRESS=artist-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-florence:7051
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
    ports:
      - 7051:7051
      - 7053:7053
    depends_on:
      - orderer0
    networks:
      - caldera

  # peer node container
  artist-peer-paris:
    container_name: artist-peer-paris
    # yaml can be modular using extends
    extends:
      file: ./peer-base.yaml
      service: peer-base
    image: artist-peer-paris
    environment:
      - CORE_PEER_ID=artist-peer-paris
      - CORE_PEER_ADDRESS=artist-peer-paris:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=artist-peer-paris:7051
      - CORE_PEER_LOCALMSPID=ArtistOrgMSP
    ports:
      # one for fabric network communication
      - 8051:7051
      # one for the eventhub service
      - 8053:7053
    depends_on:
      - orderer0
    networks:
      - caldera

  broker-peer-florence:
    container_name: broker-peer-florence
    extends:
      file: ./peer-base.yaml
      service: peer-base
    image: broker-peer-florence
    environment:
      - CORE_PEER_ID=broker-peer-florence
      - CORE_PEER_ADDRESS=broker-peer-florence:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=broker-peer-florence:7051
      - CORE_PEER_LOCALMSPID=BrokerOrgMSP
    ports:
      - 9051:7051
      - 9053:7053
    depends_on:
      # - orderer-florence
      # - artist-peer-florence
      - orderer0
    networks:
      - caldera

  broker-peer-paris:
    container_name: broker-peer-paris
    extends:
      file: ./peer-base.yaml
      service: peer-base
    image: broker-peer-paris
    environment:
      - CORE_PEER_ID=broker-peer-paris
      - CORE_PEER_ADDRESS=broker-peer-paris:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=broker-peer-paris:7051
      - CORE_PEER_LOCALMSPID=BrokerOrgMSP
    ports:
      - 10051:7051
      - 10053:7053
    depends_on:
      - artist-peer-paris
      - orderer0
    networks:
      - caldera

  api:
    container_name: api
    image: api
    environment:
      - PORT=3000
      - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
      - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:x86_64-1.1.0
    ports:
      - 3000:3000
    volumes:
      - /var/run/:/host/var/run/
    depends_on:
      - orderer0
      - artist-peer-paris
      - artist-peer-florence
      - broker-peer-paris
      - broker-peer-florence
    networks:
      - caldera
